"use strict";var ApplicationConfiguration=function(){var applicationModuleName="goodheartrate",applicationModuleVendorDependencies=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils","angles"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("trackers"),ApplicationConfiguration.registerModule("users"),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","$location","$http","Authentication",function($scope,$location,$http,Authentication){$scope.authentication=Authentication,$scope.loginOpen=!1,$scope.signupOpen=!1,$scope.currentRoute=$location,$scope.loginButtonClick=function(){$scope.loginOpen=!$scope.loginOpen,$scope.signupOpen=!1},$scope.signupButtonClick=function(){$scope.signupOpen=!$scope.signupOpen,$scope.loginOpen=!1},$scope.credentials={username:"",password:""},$scope.login=function(){$http.post("/auth/login",$scope.credentials).success(function(response){$scope.authentication.user=response,$scope.loginButtonClick(),$location.path("/tracker")}).error(function(response){$scope.error=response.message})},$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$scope.signupButtonClick(),$location.path("/tracker")}).error(function(response){$scope.error=response.message})}}]),angular.module("core").controller("HomeController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/")}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("trackers").config(["$stateProvider",function($stateProvider){$stateProvider.state("tracker",{url:"/tracker",templateUrl:"modules/trackers/views/index-tracker.client.view.html"})}]),angular.module("trackers").controller("StatsController",["$scope","Authentication","trackersService","statsService",function($scope,Authentication,trackersService,statsService){$scope.user=Authentication.user,$scope.trackers=trackersService.trackers,$scope.bpMinute=statsService.bpMinute,$scope.bpHour=statsService.bpHour,$scope.bpDay=statsService.bpDay,$scope.bpWeek=statsService.bpWeek,$scope.bpMonth=statsService.bpMonth,$scope.bpYear=statsService.bpYear,$scope.bspMinute=statsService.bspMinute,$scope.bspHour=statsService.bspHour,$scope.bspDay=statsService.bspDay,$scope.bspWeek=statsService.bspWeek,$scope.bspMonth=statsService.bspMonth,$scope.bspYear=statsService.bspYear,$scope.calculateBeats=function(){statsService.calculateBeats($scope.trackers)},$scope.calculateBeatsSaved=function(){statsService.calculateBeatsSaved($scope.user)}}]),angular.module("trackers").controller("TrackersController",["$scope","$stateParams","Authentication","trackersService","statsService",function($scope,$stateParams,Authentication,trackersService,statsService){$scope.authentication=Authentication,$scope.trackers=trackersService.trackers,$scope.trackerObj=trackersService.trackerObj,$scope.chartData=trackersService.chartData,$scope.chartOptions=trackersService.chartOptions,$scope.authentication.user?($scope.createOrUpdate=function(){trackersService.createOrUpdate($scope.trackerObj).then(function(){$scope.getAll()})},$scope.getAll=function(){trackersService.getAll().then(function(){Authentication.fetchUser().then(function(){statsService.calculateBeats($scope.trackers),statsService.calculateBeatsSaved($scope.authentication.user),trackersService.initGraph()})})},$scope.getByDate=function(){trackersService.getByDate($scope.trackerObj.date)}):($scope.createOrUpdate=function(){trackersService.createOrUpdateDemo($scope.trackerObj),$scope.getAll()},$scope.getAll=function(){statsService.calculateBeats($scope.trackers),statsService.calculateBeatsSaved({startingHeartRate:70}),trackersService.initGraph()},$scope.getByDate=function(){trackersService.getByDateDemo($scope.trackerObj.date)},trackersService.getAllDemo()),$scope.getAll()}]),angular.module("trackers").directive("ghrDatepicker",[function(){return{restrict:"A",link:function(scope,element){$(element).datepicker({dateFormat:"yy-mm-d"}),$(element).on("change keyup paste",function(){scope.trackerObj.date=$(element).val(),scope.getByDate()})}}}]),angular.module("trackers").factory("statsService",["$http",function(){var o={bpMinute:{val:0},bpHour:{val:0},bpDay:{val:0},bpWeek:{val:0},bpMonth:{val:0},bpYear:{val:0},bspMinute:{val:0},bspHour:{val:0},bspDay:{val:0},bspWeek:{val:0},bspMonth:{val:0},bspYear:{val:0}};return o.calculateBeats=function(trackers){for(var totalBPM=0,count=0,i=trackers.length-1;i>trackers.length-7&&trackers[i];i--)totalBPM+=trackers[i].bpm,count++;angular.copy({val:~~(totalBPM/count)},o.bpMinute),angular.copy({val:60*o.bpMinute.val},o.bpHour),angular.copy({val:1440*o.bpMinute.val},o.bpDay),angular.copy({val:10080*o.bpMinute.val},o.bpWeek),angular.copy({val:43200*o.bpMinute.val},o.bpMonth),angular.copy({val:525600*o.bpMinute.val},o.bpYear)},o.calculateBeatsSaved=function(user){var differencePerMinute=~~Math.abs(o.bpMinute.val-user.startingHeartRate);angular.copy({val:differencePerMinute},o.bspMinute),angular.copy({val:60*differencePerMinute},o.bspHour),angular.copy({val:1440*differencePerMinute},o.bspDay),angular.copy({val:10080*differencePerMinute},o.bspWeek),angular.copy({val:43200*differencePerMinute},o.bspMonth),angular.copy({val:525600*differencePerMinute},o.bspYear)},o}]),angular.module("trackers").factory("trackersService",["$http","$rootScope",function($http,$rootScope){var o={trackers:[],trackerObj:{date:void 0,bpm:void 0},chartData:{},chartOptions:{scaleFontFamily:"Ubuntu",scaleFontColor:"#484848",scaleOverride:!0,scaleSteps:20,scaleStepWidth:5,scaleStartValue:0}};return o.initGraph=function(){for(var monthNames=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],labelsArray=[],bpmArray=[],totalBPM=0,i=0;i<o.trackers.length;i++){var indexOfT=o.trackers[i].date.indexOf("T"),strippedDate=void 0;strippedDate=-1!==indexOfT?o.trackers[i].date.substr(0,indexOfT):o.trackers[i].date;var dateSegments=strippedDate.split("-"),formattedDate=monthNames[dateSegments[1]-1]+" "+dateSegments[2]+", "+dateSegments[0];labelsArray.push(formattedDate),bpmArray.push(o.trackers[i].bpm),totalBPM+=o.trackers[i].bpm}var averageBPM=totalBPM/o.trackers.length;labelsArray.unshift("Average BPM"),bpmArray.unshift(averageBPM);var newChartData={labels:labelsArray,datasets:[{label:"My First dataset",fillColor:"rgba(51,122,183,0.2)",strokeColor:"rgba(51,122,183,1)",pointColor:"rgba(51,122,183,1)",pointStrokeColor:"#fff",pointHighlightFill:"#fff",pointHighlightStroke:"rgba(220,220,220,1)",data:bpmArray}]};angular.copy(newChartData,o.chartData)},o.createOrUpdate=function(trackerObj){return $http.post("/trackers",trackerObj)},o.getAll=function(){return $http.get("/trackers").success(function(data){angular.copy(data,o.trackers)})},o.getByDate=function(date){return $http.get("/trackers/"+date).success(function(data){"null"!==data?angular.copy(data,o.trackerObj):(data={date:o.trackerObj.date,bpm:void 0},angular.copy(data,o.trackerObj))})},o.createOrUpdateDemo=function(trackerObj){for(var i=0;i<o.trackers.length;i++)if(o.trackers[i].date===trackerObj.date)return void(trackerObj!==o.trackers[i]&&angular.copy({date:trackerObj.date,bpm:trackerObj.bpm},o.trackers[i]));o.trackers.push({date:trackerObj.date,bpm:trackerObj.bpm}),o.trackers.sort(function(a,b){var aDate=Date.parse(a.date),bDate=Date.parse(b.date);return bDate>aDate?-1:aDate>bDate?1:0})},o.getAllDemo=function(){var tempTrackers=[{date:"2014-12-1",bpm:70},{date:"2014-12-2",bpm:70},{date:"2014-12-3",bpm:70},{date:"2014-12-4",bpm:69},{date:"2014-12-5",bpm:69},{date:"2014-12-6",bpm:68},{date:"2014-12-7",bpm:67},{date:"2014-12-8",bpm:67},{date:"2014-12-9",bpm:67},{date:"2014-12-10",bpm:65},{date:"2014-12-11",bpm:65},{date:"2014-12-12",bpm:64},{date:"2014-12-13",bpm:63},{date:"2014-12-14",bpm:63},{date:"2014-12-15",bpm:63},{date:"2014-12-16",bpm:63},{date:"2014-12-17",bpm:60},{date:"2014-12-18",bpm:60},{date:"2014-12-19",bpm:60},{date:"2014-12-20",bpm:60},{date:"2014-12-21",bpm:59},{date:"2014-12-22",bpm:58},{date:"2014-12-23",bpm:57},{date:"2014-12-24",bpm:57},{date:"2014-12-25",bpm:56},{date:"2014-12-26",bpm:56},{date:"2014-12-27",bpm:55},{date:"2014-12-28",bpm:55},{date:"2014-12-29",bpm:55},{date:"2014-12-30",bpm:54}];angular.copy(tempTrackers,o.trackers)},o.getByDateDemo=function(date){for(var i=0;i<o.trackers.length;i++)if(o.trackers[i].date===date)return void(o.trackers[i]!==o.trackerObj&&$rootScope.$apply(angular.copy(o.trackers[i],o.trackerObj)));var data={date:date,bpm:void 0};$rootScope.$apply(angular.copy(data,o.trackerObj))},o}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invalid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",["$injector",function($injector){var o={user:window.user};return o.fetchUser=function(){var http=$injector.get("$http");return http.get("/users/"+o.user._id).success(function(data){angular.copy(data,o.user)})},o}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);